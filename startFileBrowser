#!/bin/ash
pidof(){
	ps|grep "$@" |grep -v grep|awk '{print $1}'
}

logpath='/filebrowser.log'
echo "start " >$logpath
model=$(cat /proc/xiaoqiang/model)
setconfig model $model
port=$(getconfig port)
if [[ -z "$port" ]]; then
	#statements
	port=8088
	setconfig port $port
	setconfig enable on
fi


app_path='/bin/filebrowser'
if [ "$model" == "R1D" -o "$model" == "R2D" -o "$model" == "R3D"  ]; then
	app_path='/bin/filebrowser'
elif [ "$model" == "R3" -o "$model" == "R3P" -o "$model" == "R3G" -o "$model" == "R1CM" ]; then
	app_path='/bin/filebrowser_mips'
fi

$app_path -c filebrowser.json -p $port &

PID=$(pidof $app_path)
echo "pid of $app_path : $PID" >>$logpath

#setconfig enable on
enable="on"
echo "start while" >>$logpath
while [[ "$enable" == "on" ]]; do
	#statements
	enable=$(getconfig enable)
	#echo "plugin is enable: $enable" >>$logpath
	newport=$(getconfig port)
	if [[  "$port" != "$newport" ]]; then
		echo "port: $port change to: $newport" >>$logpath
		echo "kill old pid: $PID " >>$logpath
		kill $PID
		echo "start new $app_path" >>$logpath
		port="$newport"
		$app_path -c filebrowser.json -p $newport &
	fi

	PID=$(pidof $app_path)
	#echo "pid of $app_path : $PID" >>$logpath
	sleep 3
done
echo "end while" >> $logpath

#kill $PID
echo "pid of $app_path to kill: $PID" >>$logpath
kill $PID

echo "end kill" >>$logpath

echo "pid of $0 to kill: $$" >>$logpath
kill $$
echo "stop $app_path" >> $logpath
#exit 0
