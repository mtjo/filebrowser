#!/bin/ash
pidof(){
	ps|grep "$@" |grep -v grep|awk '{print $1}'
}

getconfig() {
	grep "key$1" /etc/plugin_config |awk -F '=' '{print $2}'|awk '{print substr($1,2)}'|awk '{print substr($1,1,length($1)-2)}'
}

setconfig() {
	key="key$1";
	val=$2;
	newstr="$key = \"$val\";"
	config_path="/etc/plugin_config";
	if [[ -z "$(grep $key $config_path)" ]]; then
		echo $newstr >> $config_path
	else
		oldstr=$(grep $key $config_path)
		sed -i "s/$oldstr/$newstr/g" $config_path
	fi
}

urldecode(){
	awk 'BEGIN{for(i=0;i<10;i++)hex[i]=i;hex["A"]=hex["a"]=10;hex["B"]=hex["b"]=11;hex["C"]=hex["c"]=12;hex["D"]=hex["d"]=13;hex["E"]=hex["e"]=14;hex["F"]=hex["f"]=15;}{gsub(/\+/," ");i=$0;while(match(i,/%../)){;if(RSTART>1);printf"%s",substr(i,1,RSTART-1);printf"%c",hex[substr(i,RSTART+1,1)]*16+hex[substr(i,RSTART+2,1)];i=substr(i,RSTART+RLENGTH);}print i;}'
}

logpath='/filebrowser.log'
echo "start " >$logpath
model=$(cat /proc/xiaoqiang/model)
setconfig model $model
port=$(getconfig port)
if [[ -z "$port" ]]; then
	#statements
	port=8088
	setconfig port $port
	setconfig enable on
fi


app_path='/filebrowser'
if [ "$model" == "R1D" -o "$model" == "R2D" -o "$model" == "R3D"  ]; then
	app_path='/filebrowser'
elif [ "$model" == "R3" -o "$model" == "R3P" -o "$model" == "R3G" -o "$model" == "R1CM" ]; then
	app_path='/filebrowser_mips'
fi

$app_path -c /filebrowser.json -p $port &

PID=$(pidof $app_path)
echo "pid of $app_path : $PID" >>$logpath

#setconfig enable on
enable="on"
echo "start while" >>$logpath
while [[ "$enable" == "on" ]]; do
	#statements
	enable=$(getconfig enable)
	#echo "plugin is enable: $enable" >>$logpath
	newport=$(getconfig port)
	if [[  "$port" != "$newport" ]]; then
		echo "port: $port change to: $newport" >>$logpath
		echo "kill old pid: $PID " >>$logpath
		kill $PID
		echo "start new $app_path" >>$logpath
		port="$newport"
		$app_path -c filebrowser.json -p $newport &
	fi

	PID=$(pidof $app_path)
	#echo "pid of $app_path : $PID" >>$logpath
	sleep 3
done
echo "end while" >> $logpath

#kill $PID
echo "pid of $app_path to kill: $PID" >>$logpath
kill $PID

echo "end kill" >>$logpath

echo "pid of $0 to kill: $$" >>$logpath
kill $$
echo "stop $app_path" >> $logpath
#exit 0
